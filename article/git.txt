1 git是分布式版本控制系统，而svn等是集中式版本控制系统。
     区别：先说集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，
      再把自己的活推送给中央服务器；
     分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样，你工作的时候，就不需要联网了，因为版本库就在你自己的电脑上。
     既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢？比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，
     这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了(这时需要这2台机器联网)。
     在实际使用分布式版本控制系统的时候，其实很少在两人之间的电脑上推送版本库的修改，因为可能你们俩不在一个局域网内，两台电脑互相访问不了，
     也可能今天你的同事病了，他的电脑压根没有开机。因此，分布式版本控制系统通常也有一台充当“中央服务器”的电脑，
     但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。

2 安装git，安装完成后需要配置  命令： git config --global user.name "XX" git config -- global user.email "XX"

3 创建版本库  命令如下：
             mkdir g:/dotnet     作用是在本地g盘根目录下新建目录dotnet
             cd g:/dotnet        作用是进入目录g:/dotnet 
             git init            作用是把g:/dotnet 这个目录变成git可以管理的仓库(成功后会在该目录下生成一个.git目录(隐藏的))

4 把文件添加到版本库 
         首先需要新建一个文件 eg. readme.txt 这个文件必须放在g:/dotnet目录下
         然后通过以下命令 
                       git add readme.txt 第一步把这个文件添加到版本库暂存区(stage)中   
                       git commit -m"log" 第二步把这个文件提交到版本库的master分支上
5 操作版本
          git status  作用是查看仓库的当前状态  
          git diff readme.txt   作用是查看readme.txt的修改
    5.1 版本回退 
          git reset --hard HEAD^ 作用是回退到当前版本的上一个版本，其中HEAD代表当前版本 HEAD^代表上一个 HEAD^^代表上
                                 上一个；如果要回退到指定版本，需要 git reset --hard 版本号开头的7位(通过git log查看)
    5.2 工作区和暂存区的概念
          工作区就是能看见的目录 eg. g:/dotnet 这个目录中自动生成的.git目录就是版本库
          版本库中有暂存区(stage)和第一个分支(master)
          所以4 中 git add 就是把工作区中的文件添加到暂存区  git commit 就是一次性把暂存区中所有的修改提交到当前分支
    5.3 管理修改
          git跟踪并管理的是修改。 一个文件被修改以后，仍然需要通过命令来提交到版本库，即 git add readme.txt   git commit -m"update"       
          所以任何修改如果没有放到暂存区 在commit时都不会提交到分支
    5.4 撤销修改
          1）修改了readme.txt 未add 然后想撤销本次修改 需要命令 git checkout -- readme.txt 这样工作区版本就回到最近的commit或add(或手动删除工作区)
          2）修改了readme.txt 并add 然后想撤销本次修改 需要命令 git reset HEAD readme.txt(这样会撤销暂存区的修改 回到修改后未add的情况)
                                                           然后 git checkout -- readme.txt
          3) 修改了readme.txt 并add并commit 然后想撤销本次修改 需要命令 git reset -- hard HEAD^
          总结：checkout 撤销的仅是工作区的修改;
                reset 不仅可以回退版本 还可以撤销暂存区的修改
    5.5 删除文件
           删除也是一种修改
          1) 确定要删除的  git rm test.txt  git commit
          2) 误删要恢复的  git checkout -- test.txt 

6 远程仓库
      原理：
      Git是分布式版本控制系统，同一个Git仓库，可以分布到不同的机器上。怎么分布呢？最早，肯定只有一台机器有一个原始版本库，
      此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。
      实际情况往往是这样，找一台电脑充当服务器的角色，每天24小时开机，其他每个人都从这个“服务器”仓库克隆一份到自己的电脑上，
        并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交。
      github:
         是提供Git仓库托管服务的，所以，只要注册一个GitHub账号，就可以免费获得Git远程仓库。
         1)创建SSH Key。在用户主目录(c:/users/..)下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步.
                        如果没有 使用命令 $ ssh-keygen -t rsa -C "youremail@example.com" 然后一路回车 创建成功后会在用户
                        主目录中找到.ssh目录
         2)登录github 在 AccountSettings 中添加1)中生成的密钥
      添加远程库：
           场景：先有本地版本库 然后希望在github上创建一个版本库并让这2个仓库同步
      从远程库克隆：
       
       (未完待续)