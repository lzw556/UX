一 css属性   
    1 color值不能继承吗?可以继承的css属性有哪些?
    2 em 和px的关系??
    3 属性值设置为inherit和不写有区别吗?
    4 css 文本属性总结
    5 学习doyoe关于margin的文章
    6 box-sizing总结
    6 focus hover active 会不会有2种状态交叉的时候
    7 position
    8 background-position

二 元素在浏览器中的默认样式    
    1 body 上 右 下 左 margin
    2 h1   上  下  margin;h1-h6字体大小分别是多少?font-weight是什么?
    3 ul/ol
        0> ul 默认:display:block  li 默认:display:list-item
        1> ul上下margin 从内容开始到最左边都是padding(包含list-style部分)
        2> li 没有padding margin
    4 button在浏览器中的默认样式,box-sizing默认是border-box
    5 input-submit在浏览器中的默认样式,display:inline-block,box-sizing默认是border-box,有border和padding和outline
    6 input-text在浏览器中的默认样式,display:inline-block,有border和padding和outline

三 css经典问题(网络上有比较多的讨论和成熟的解决方案的)
   1 inline-block元素不在同一行书写产生的空格问题
     http://www.zhangxinxu.com/wordpress/2010/11/%E6%8B%9C%E6%8B%9C%E4%BA%86%E6%B5%AE%E5%8A%A8%E5%B8%83%E5%B1%80-%E5%9F%BA%E4%BA%8Edisplayinline-block%E7%9A%84%E5%88%97%E8%A1%A8%E5%B8%83%E5%B1%80/
     https://www.zhihu.com/question/21468450

四 css reset   
   1 cssreset.css和normalize.css
   2 html和body选择器的区别?哪些全局的样式应该放在html中,哪些应该放在body中?

五 做demo(yuedu.163.com)时遇到的问题和经验总结
   首页
       1 模块.m-topbar
         1.1 经验: 顶部工具条如何命名? eg. topnav topbar shortcut
         1.2 问题: 如何实现效果--工具条整体高度36px(其中包含1px的下边框)?
             无需设置其height为35px,因为是单行所以可以设置其中的子元素的line-height为35px即可.这样做的好处是只需要设置line-height这一个属性
             (无需height)就可以使其内容垂直居中;而使用height的话则必须同时设置line-height属性.
         1.3 经验: 宽度非100%的版心需要一个包裹容器,可以命名为inner
         1.4 经验: 如果本身是块级元素则其外层无需再包裹容器
         1.5 经验: 实现单行文本水平导航条效果的注意点
             1 一般用ul标签来做,li设置float:left
             2 带背景图片的,背景图主要包含有背景条,左右2个圆角背景条,和分割背景条,这种的因为背景图都是有高度的,所以需要设置高度
             3 每个导航之间带分隔符的,分隔符效果详见1.6
         1.6 经验: 实现 | 分隔符效果的3个方案: 1)字符"|" 2)类似用css来模拟.spacer{width:1px;height:12px} 3)背景图片4)border-right
                   其中第一种方案:涉及到文字和"|"对齐的问题,需要研究透
       2 模块.m-login-dropdown
         2.1 问题: 一个块级元素中可以并列包含一个行内元素和块级元素吗? 可以
         2.2 经验: 文本+图标左右布局的html结构是--<a>文本<i></i></a>
         2.3 经验: 实现三角形图标效果的3个方案
             1 html特殊字符
             2 背景图片
             3 css中的border属性(可以作为一个元件积累下来)
         2.4 经验: 什么时候需要外层的容器div呢?
             1 一个有明确语义的模块(视觉区域);视觉区域上相对独立的一行(eg. .topbar)
             2 弹出层,比如绝对定位的下拉菜单(eg. .dropdown-layer)
             3 父容器宽度是100%其中内容水平居中时,就需要一个inner div来包裹内容(详见1.3)
         2.5 经验: .dropdown-layer这个容器需要绝对定位,所以需要预先考虑其参照容器.m-login-dropdown
         2.6 经验: 气泡边框效果
             1 外层三角形需要绝对定位,其参照容器是.dropdown-layer
             2 内层三角形需要绝对定位,其参照容器是外层三角形.caret-wrap,其left为 -border-width
             3 在气泡边框的border-width指定下,外层三角和内层三角的border-width之差是多少?内层三角的top是多少?
         2.7 经验: 带图标的按钮效果
             1 html结构<a>文本<i></i></a>
             1 图标位置使用padding-left预留
             2 图标使用绝对定位和内容对齐
         2.8 问题: 弹出层默认隐藏时 为什么直接写行内样式:style="display:none;"? eg. .dropdown-layer
         2.9 问题: 以登录为例,前端交付的时候是页面状态是登录前还是登录后?如何模拟和后台的交互?静态模板到服务端模板如何转换?
       3 模块.m-logo
         3.1 问题: logo图片用背景做时,容器元素a需要设置display:block,并且要设置weight和height分别等于图片的宽和高?
         3.2 问题: logo所在的a标签中的文本的隐藏方案??
       4 模块.m-search
         4.1 经验: html结构-- wrap-form-(input[text]+input[submit])
         4.2 经验: 为了避免2个inline-block元素之间的空白间隙问题,text和submit都使用float
         4.3 经验: text中padding的使用,只在水平方向上使用了padding,垂直方向上没有用;原因是垂直方向上补白用line-height比padding更合适;
                   line-height:指定文本行垂直方向之间的距离;
                   padding:指定元素内容区边界到边框之间的补白;
         4.4 经验: submit使用背景图片做按钮时,value设置为&nbsp;可以绕过好多问题
         4.5 问题: 元素浮动后为什么不独占一行? eg. text
       5 模块.m-cloud
         5.1 经验: 按钮组效果中border重合问题的解决方案是--negative margin eg. .m-clouds a.end
       6 模块.m-nav
         6.1 问题: 什么命名为menu为佳 什么命名为nav为佳? 自己的理解是:树形结构是menu,非树形或者只有一级叫nav
         6.2 经验: 底线重合效果(即2个容器的底部边框重合):设置margin-bottom为负值
       7 模块.m-menu
         7.1 问题: 对于加粗文本,什么时候用标题标签,什么时候用bold???
         7.2 问题: css模块不需要在其前面加父选择器,感觉有点像ID选择器???
         7.3 问题: 绝对定位的元素如果不设置top和left和width,为什么不独占一行而是宽度最小的呢?
         7.4 经验: 后台生成的元素不考虑空白间隙问题,因为可以控制其不换行
         7.5 问题: 绝对定位top left的参考起始位置是从参照元素的padding开始算的??绝对定位元素遮挡其他元素的方法:设置绝对定位元素的背景??
         7.6 经验: 什么时候需要设置容器的width?设置技巧有哪些?
             1 定宽布局时;技巧是设置最外层的容器width即可
             2 绝对定位的元素,width默认为auto;所以必须重新设置width,技巧是设置里面容器的width,然后把外面的容器撑开
        块级元素在浮动的情况下 左右margin是否有一个无效呢???
       8 模块.m-slider
         8.1 问题:对于如此经典的功能,html结构和css命名应该比较成熟了,需要总结
         8.2 问题:.slider-list中,a标签中嵌套img标签,但是a标签的高度不会自适应图片的高度,详见7.html(已开始想当然以为a标签应该和块级元素一样会把
                  图片包裹住并自适应图片的高度)
         8.3 问题:通过做右下角的导航功能(.slider-nav)总结
                  1 再次发现实现图标的3种方法:html字符,css和图片
                  2 inline-block元素height比文本的font-size小时的布局,详见8.html
                  3 小圆点用html字符实现时如何精准控制其高度???
         8.4 经验:绝对定位垂直居中,top:50%;margin-top:-1/2垂直居中元素的height
         8.5 经验:使用html字符来实现向左/向右图标




line-height 对块级元素中单行文本高度的影响和 对行内元素高度的影响 区别
对于内容是单行文本的块级元素,垂直居中有2种方法:单独设置line-height和设置height和line-height并2者相等.区别就是第1种因为没设置
height,所以如果存在行内子元素可能会造成块元素高度大于line-height(解决方法:设置子元素vertical-align:top/bottom/middle或display:block),
详见9.html;由此暂时自认为块元素中的单行文本(有子元素)垂直居中最佳实践是设置height和line-height并2者相等

float元素不在正常流 其原来在正常流中的位置会被占 但是占的元素的内容没过去,对占的元素使用overflow会使元素发生偏移

尽量把内容和布局分离开,例子见.m-book-info

padding和margin区别:a标签的鼠标效果 ,padding有效果,margin没有
样式需要考虑各种边界值

i 标签 初始化
cover不设置width/height时 ,比图片高
网格如何实现,特别是边框重合后宽度的准确
:hover 只能用于a标签吗?
样式在命名时尽可能和业务无关,即如果现在换了业务,该命名仍然适用
.m-man-list .m-ts-list  .m-books-four/.m-books-ten

a 标签里面不能嵌套a 即使间接嵌套也不行,a标签display:block当做块容器来使用时,其中的子元素可以用p来代替div
块级元素中放一个图片 ,图片下面有空白,详见.m-article
图标和后面文字对齐的问题
文本和图标对齐问题 详见.m-about关注我们
发邮件的a标签,color如果不单独设置的话不会是其父元素的color,这看起来好像是没有继承;其实不是,而是继承的优先级比其本身的低
当不知道如何命名css的class时,用不同的html元素来区分,比如2个p可以用 1个p和1个h来替代
在写后代选择器时,那个层级可以省略呢?
body 中初始化color属性
容器宽度已知,文本过长的话会在到达右边内边界时自动换行,这样的话会存在整个词被换行的现象;如果设置white-space:nowrap,那么当
遇到整个词被换行时,就会阻止换行,并另起一行.

css书写顺序
reset-布局-各功能实现(此阶段只确定尺寸和位置)-字体和颜色-背景图片和图标
设置color(其他属性也是这样的)时如何只设置父元素然后想通过继承作用到目标元素上,往往不起作用;这个好像是跟优先级有关
.m-nav li a hover时高度不会改变是因为设置了height

分隔符的实现难点:和前后文本的对齐,所以最好都是在一个行内元素中,方法就是:after
  after:第3个不设置padding 还不行
  5x+4y =658

css sprite 和 icon font
前者:好处减少请求,弊端是维护复杂;后者:维护清爽简单,弊端是只能单色